{"version":3,"sources":["components/Title.js","components/RadioButtonsPlants.js","components/SearchForm.js","components/Plant.js","components/PlantLists.js","pages/Home.js","components/ButtonBackToHome.js","pages/Detail.js","pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Title","children","className","RadioButtonPlants","state","selectedOption","handleOptionChange","e","setState","target","value","sendRadioValues","console","log","props","onResults","type","name","onChange","this","Component","API_KEY","INITIAL_STATE","inputPlant","page","totalPlants","initialPage","finalPage","showButtons","radioValue","SearchForm","_handleChange","_handleNextPage","_handlePreviousPage","_handleFirstPage","_handleLastPage","Math","ceil","_handleSubmit","preventDefault","fetch","then","res","json","results","data","meta","total","_handlePages","_handleRadioButtons","onSubmit","placeholder","onClick","disabled","Plant","scientific_name","image_url","id","to","src","alt","PlantList","plants","length","key","map","planta","Home","usedSearch","_handleResults","radioButtonsValue","classes","_renderResults","ButtonBackToHome","Detail","plant","window","history","back","plantId","match","params","_fechPlant","family","author","bibliography","common_name","year","observations","NotFound","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.40c82067.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Title = ({children}) => (\r\n<h1 className=\"title is-1 mt-6 has-text-info\" >{children}</h1>\r\n)","import React, {Component} from 'react'\r\n\r\nexport class RadioButtonPlants extends Component {\r\n\r\n    state = {\r\n        selectedOption: ''\r\n    }\r\n\r\n    handleOptionChange = (e) => {\r\n        this.setState({\r\n            selectedOption: e.target.value\r\n        }, () => {this.sendRadioValues()})\r\n      }\r\n\r\n    sendRadioValues = () => {\r\n        const {selectedOption} = this.state;\r\n        console.log('Opcion selecionada' + selectedOption)\r\n        this.props.onResults(selectedOption)\r\n    }\r\n    render(){\r\n        return(\r\n            \r\n            <div className=\"control\">\r\n                <label className=\"radio\">\r\n                    <input \r\n                    type=\"radio\" \r\n                    name=\"rsvp\" \r\n                    value ='genus_name'\r\n                    onChange={this.handleOptionChange}\r\n                    />\r\n                    Genus\r\n                </label>\r\n                <label className=\"radio\">\r\n                    <input \r\n                    type=\"radio\" \r\n                    name=\"rsvp\" \r\n                    value='scientific_name'\r\n                    onChange={this.handleOptionChange}\r\n                    />\r\n                    Species\r\n                </label>\r\n                <label className=\"radio\">\r\n                    <input \r\n                    type=\"radio\" \r\n                    name=\"rsvp\" \r\n                    value='common_name'\r\n                    onChange={this.handleOptionChange}\r\n                    />\r\n                    Common name\r\n                </label>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport {RadioButtonPlants} from './RadioButtonsPlants.js'\r\n\r\nconst API_KEY = 'rmT15QniWjW_VZOh6PoGm1_xeYQ8jpdNifiAfZoVvBk'\r\nconst INITIAL_STATE = {\r\n    inputPlant: '',\r\n    page: 1,\r\n    totalPlants: 0.1,\r\n    initialPage: true,\r\n    finalPage: false,\r\n    showButtons: false,\r\n    radioValue: ''\r\n}\r\n\r\nexport class SearchForm extends Component {\r\n\r\n    state = INITIAL_STATE\r\n\r\n    _handleChange = (e) =>{\r\n        this.setState({inputPlant : e.target.value,\r\n        page: 1, totalPlants: 0.1})\r\n    }\r\n\r\n    _handleNextPage = () =>{\r\n        const {page} = this.state\r\n        console.log('nextPageAnets '+ page)\r\n        this.setState({page: page + 1})\r\n        console.log('nextPageDes'+ page)\r\n    }\r\n\r\n    _handlePreviousPage = () => {\r\n        const {page} = this.state\r\n        this.setState({page : page - 1})\r\n    }\r\n\r\n    _handleFirstPage = () => {\r\n        this.setState({page: 1})\r\n    }\r\n\r\n    _handleLastPage = () => {\r\n        const {totalPlants} = this.state\r\n        this.setState({page : Math.ceil((totalPlants)/20)})\r\n    }\r\n\r\n    _handlePages () {\r\n        const {totalPlants, page} = this.state\r\n        if (page >= Math.ceil((totalPlants)/20)) {\r\n            this.setState({finalPage : true})}\r\n        else {this.setState({finalPage: false})}\r\n        if (page === 1) {\r\n            this.setState({initialPage : true})\r\n        }\r\n        else {\r\n            this.setState({initialPage: false})\r\n        }\r\n\r\n    }\r\n\r\n\r\n    _handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n\r\n        const {inputPlant, page, radioValue} = this.state\r\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n\r\n        if(radioValue ==='') { return}\r\n        if(inputPlant==='') { return}\r\n\r\n        fetch(`${proxyurl}https://trefle.io/api/v1/plants?token=${API_KEY}&page=${page}&filter[${radioValue}]=${inputPlant}`)\r\n        .then(res => res.json())\r\n        .then(results => {       \r\n            console.log(results)\r\n            const {data = [], meta = 0} = results\r\n            this.props.onResults(data)\r\n            this.setState({totalPlants: meta.total})\r\n            if (meta.total > 0) {\r\n                this.setState( {showButtons: true})\r\n            }\r\n            else{\r\n                this.setState({showButtons: false})\r\n            }\r\n            this._handlePages()          \r\n        })     \r\n    }\r\n\r\n    _handleRadioButtons = (radioValue) =>{\r\n        this.setState({radioValue})\r\n        console.log('handleRadioButtons' + radioValue)\r\n        }\r\n\r\n\r\n    render() {\r\n        const {initialPage, finalPage, showButtons, radioValue} = this.state\r\n        return(\r\n            <div className='ContainerSearchForm'>\r\n                <div className='InformacionHome' >\r\n                 {radioValue===''\r\n                ? <h4 className=\"subtitle is-4 has-text-info\">Please, check an option</h4>\r\n                : <h4 className=\"subtitle is-4 has-text-info\">Please, write your search</h4>\r\n                    }\r\n                </div>\r\n                <div className='RadioButtons'>\r\n                    <RadioButtonPlants onResults={this._handleRadioButtons}/>\r\n                </div>\r\n                <form onSubmit={this._handleSubmit}>\r\n                    <div className=\"field has-addons\">\r\n                        <div className=\"control\">\r\n                            <input \r\n                            className=\"input\" \r\n                            onChange={this._handleChange}\r\n                            type=\"text\" \r\n                            placeholder=\"Find plants\"/>\r\n                        </div>\r\n                        <div className=\"control\">\r\n                            <button className=\"button is-info\">\r\n                            Search\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        {showButtons\r\n                        ? <div className='field is-grouped mt-6'>\r\n                            <p className='control'>\r\n                            <button \r\n                            className='button is-info is-small' \r\n                            onClick={this._handleFirstPage} \r\n                            disabled = {initialPage}>First</button>\r\n                            </p>\r\n                            <p className='control'>\r\n                            <button \r\n                            className='button is-info is-small ml-4' \r\n                            onClick={this._handlePreviousPage} \r\n                            disabled = {initialPage}>Prev</button>\r\n                            </p>\r\n                            <p className='control'>\r\n                            <button \r\n                            className='button is-info is-small ml-4' \r\n                            onClick={this._handleNextPage} \r\n                            disabled={finalPage}>Next</button>       \r\n                            </p>\r\n                            <p className='control'>\r\n                            <button \r\n                            className='button is-info is-small ml-4' \r\n                            onClick={this._handleLastPage} \r\n                            disabled = {finalPage}>Last</button>\r\n                            </p>\r\n                        </div>\r\n                        : null\r\n                        }\r\n                    </div>\r\n                </form>\r\n        </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport class Plant extends Component{\r\n    static propTypes = {\r\n        //id: PropTypes.string,\r\n        scientific_name: PropTypes.string,\r\n        image_url: PropTypes.string,\r\n    }\r\n\r\n    render() {\r\n        const {scientific_name, image_url, id} = this.props\r\n\r\n        return (\r\n            <Link to={`/detail/${id}`} className=\"card\">\r\n                <div className=\"card-image\">\r\n                    <figure className=\"image\">\r\n                    <img \r\n                        src={image_url}\r\n                        alt='Img. not available'/>\r\n                    </figure>\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    <div className=\"media\">\r\n                    <div className=\"media-content\"> \r\n                        <p className=\"title is-4\">{scientific_name}</p>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </Link>             \r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Plant} from './Plant.js'\r\n\r\nexport class PlantList extends Component{\r\n\r\n    static propTypes = {\r\n        plants: PropTypes.array\r\n    }\r\n\r\n    render(){\r\n        const {plants} = this.props\r\n        return (\r\n            <div>\r\n            <h4 className=\"subtitle is-6 mt-2\">Find more information by clicking on the image</h4>\r\n            {plants.length === 1\r\n            ? <div className = 'SinglePlant'>\r\n                        <div key={plants[0].id} className='PlantList-item'>\r\n                            < Plant  \r\n                            id = {plants[0].id}\r\n                            scientific_name={plants[0].scientific_name}\r\n                            image_url = {plants[0].image_url}\r\n                            />\r\n                        </div>              \r\n             </div>\r\n            : <div className = 'PlantList'>\r\n                {\r\n                    plants.map(planta =>{\r\n                        return (\r\n                        <div key={planta.id} className='PlantList-item'>\r\n                            < Plant  \r\n                            id = {planta.id}\r\n                            scientific_name={planta.scientific_name}\r\n                            image_url = {planta.image_url}\r\n                            />\r\n                        </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n    }\r\n        </div>\r\n        )\r\n    }   \r\n}","import React, { Component } from 'react';\r\nimport {Title} from '../components/Title.js'\r\nimport {SearchForm} from '../components/SearchForm.js'\r\nimport {PlantList} from '../components/PlantLists.js'\r\n\r\n\r\nexport class Home extends Component{\r\n\r\n    state = {results: [], usedSearch: false\r\n    }\r\n\r\n    _handleResults = (results) =>{\r\n    this.setState({results: results, usedSearch: true})\r\n    }\r\n\r\n    _handleRadioButtons = (radioButtonsValue) =>{\r\n        this.setState({radioButtonsValue: radioButtonsValue})\r\n        console.log('handleRadioButtons' + radioButtonsValue)\r\n        }\r\n\r\n\r\n    _renderResults() {\r\n    return this.state.results.length === 0\r\n    ? <p>Sorry, no results were found</p>\r\n    : <PlantList plants = {this.state.results}/>\r\n    }\r\n\r\n    render() {\r\n        const{results, usedSearch}=this.state\r\n        var classes = ''\r\n        if (results.length === 0 && !usedSearch) {classes = 'ContainerHome'}\r\n        else {classes = 'ContainerResults'}\r\n        return (\r\n            <div className= {classes}>\r\n                <Title>Plant Finder</Title>\r\n                <h4 className=\"subtitle is-6 is-italic has-text-weight-light\">Francisco G. Gonzálvez</h4>\r\n                    <div className='SearchForm-Wrapper'>\r\n                    <SearchForm onResults={this._handleResults}/>\r\n                    </div>\r\n                    {usedSearch\r\n                    ? this._renderResults()\r\n                    : null\r\n                    }                        \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const ButtonBackToHome = () => (\r\n    <Link\r\n        className='button is-info' \r\n        to = '/plant-finder'>\r\n        Back to home\r\n    </Link>\r\n)","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {ButtonBackToHome} from '../components/ButtonBackToHome.js'\r\nimport {Title} from '../components/Title.js'\r\n\r\nconst API_KEY = 'rmT15QniWjW_VZOh6PoGm1_xeYQ8jpdNifiAfZoVvBk'\r\n\r\nexport class Detail extends Component {\r\n    static propTypes = {\r\n        //match contiene un objeto params con todos los parñametros de la url\r\n        match: PropTypes.shape({\r\n            params: PropTypes.object,\r\n            isExact: PropTypes.bool,\r\n            path: PropTypes.string,\r\n            url: PropTypes.string\r\n          })\r\n    }\r\n\r\n    state = {plant: {}}\r\n\r\n    _fechPlant({id}){\r\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n\r\n        fetch(`${proxyurl}https://trefle.io/api/v1/species/${id}?token=${API_KEY}`)\r\n        .then(res => res.json())\r\n        .then(results => {\r\n            \r\n            const {data} = results\r\n            console.log(data)\r\n            this.setState({plant : data})\r\n        })\r\n\r\n    }\r\n\r\n    _goBack(){\r\n        window.history.back()\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(this.props)\r\n        const {plantId} = this.props.match.params\r\n        this._fechPlant({id : plantId})\r\n    }\r\n\r\n    render() {\r\n        const {scientific_name, family, author, bibliography, common_name, image_url, year, observations} = this.state.plant\r\n        return (\r\n            <div>             \r\n                <Title>Plant Finder</Title>\r\n                <ButtonBackToHome/>               \r\n                <div className=\"card\">\r\n                    <div className=\"card-content\">\r\n                        <div className=\"media\">\r\n                        <div className=\"media-content\">\r\n                            <p className=\"title is-2\">{family}</p>\r\n                            <p className=\"subtitle is-4\"><i>{scientific_name}</i> {author} {year}</p>\r\n                            <p className=\"subtitle is-5\">Common name: {common_name}</p>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"content\">\r\n                        <strong>Distribution</strong>: {observations}\r\n                        <br/>\r\n                        <strong>Bibliography</strong>: {bibliography}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-image\">\r\n                        <figure className=\"image\">\r\n                        <img src={image_url} alt=\"Img. not available\"/>\r\n                        </figure>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}","import React from 'react'\r\nimport {ButtonBackToHome} from '../components/ButtonBackToHome.js'\r\n\r\nexport const NotFound = () => (\r\n    <div>\r\n        <h1 className='title'>404!</h1>\r\n        <h2 className='subtitle'>No existe la página</h2>\r\n        <ButtonBackToHome/>\r\n    </div>\r\n)","import React, {Component} from 'react';\nimport {Switch, Route} from 'react-router-dom'\nimport './App.css';\nimport 'bulma/css/bulma.css'\n\nimport {Home} from './pages/Home.js'\nimport {Detail} from './pages/Detail.js'\nimport {NotFound} from './pages/NotFound.js'\n\n\nclass App extends Component {\n  \n\n  render() {\n    return(\n      <div className=\"App\" >\n        <Switch>\n          <Route exact path='/plant-finder' component={Home}/>\n          <Route path='/detail/:plantId' component={Detail}/>\n          <Route component={NotFound}/>\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}